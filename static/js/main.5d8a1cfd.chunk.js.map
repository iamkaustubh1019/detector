{"version":3,"sources":["firebase/firebase.js","components/listItems.js","components/Dashboard.js","App.js","serviceWorker.js","index.js","components/utils.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","axios","require","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","useState","imageAsFile","setImageAsFile","imageUrl","imageAsUrl","setImageAsUrl","showImageUploaded","setShowImageUploaded","identifiedImageURL","setIdentifiedImageURL","firebaseURL","setFirebaseURL","loader","setLoader","console","log","React","useEffect","data","url","config","Host","AxiosOptions","then","resp","catch","classes","open","setOpen","clsx","className","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","onSubmit","e","preventDefault","error","ref","name","put","on","snapShot","err","child","getDownloadURL","fireBaseUrl","prevObject","imgUrl","style","margin","type","onChange","image","target","files","imageFile","marginTop","src","alt","CircularProgress","disableShrink","Box","pt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","exports","RequestMethod","options","method","headers"],"mappings":"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","file":"static/js/main.5d8a1cfd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBTUj1FLY68SxrCDdV-f0IJBpxR93V3AWM\",\r\n    authDomain: \"detector-9f5f2.firebaseapp.com\",\r\n    databaseURL: \"https://detector-9f5f2.firebaseio.com\",\r\n    projectId: \"detector-9f5f2\",\r\n    storageBucket: \"detector-9f5f2.appspot.com\",\r\n    messagingSenderId: \"403301091128\",\r\n    appId: \"1:403301091128:web:8f2a6bbff0d4df4b6a63cd\",\r\n    measurementId: \"G-9TZ5811RRH\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n//   firebase.analytics();\r\n  const storage = firebase.storage();\r\n  \r\nexport  {\r\n    storage, firebase as default\r\n  }\r\n ","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Detector\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved Images</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end\" />\r\n    </ListItem>\r\n  </div>\r\n);","import React,{useState} from 'react';\r\nimport {storage} from \"../firebase/firebase\"\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport {AxiosOptions,Host} from \"./utils\"\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://google.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 500,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const allInputs = {imageUrl:''};\r\n  const [imageAsFile, setImageAsFile] = useState('');\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [showImageUploaded,setShowImageUploaded] = useState(false);\r\n  const [identifiedImageURL,setIdentifiedImageURL] = useState('');\r\n  const [firebaseURL,setFirebaseURL] = useState('')\r\n  const [loader,setLoader] = useState(false);\r\n  console.log(imageAsFile)\r\n  const handleImageAsFile = (e) => {\r\n\r\n        const image = e.target.files[0]\r\n        setShowImageUploaded(false);\r\n        setImageAsFile(imageFile => (image))\r\n    }\r\n  const handleFireBaseUpload = e => {\r\n    setLoader(true); \r\n    e.preventDefault()\r\n    console.log('Start of upload')\r\n    // async magic goes here...\r\n    if(imageAsFile === '') {\r\n      console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n    }\r\n    const uploadTask = storage.ref(`/images/${imageAsFile.name}`).put(imageAsFile)\r\n    //initiates the firebase side uploading \r\n    uploadTask.on('state_changed', \r\n    (snapShot) => {\r\n      //takes a snap shot of the process as it is happening\r\n      console.log(snapShot)\r\n    }, (err) => {\r\n      //catches the errors\r\n      console.log(err)\r\n    }, () => {\r\n      // gets the functions from storage refences the image storage in firebase by the children\r\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n      storage.ref('images').child(imageAsFile.name).getDownloadURL()\r\n       .then(fireBaseUrl => {\r\n         setFirebaseURL(fireBaseUrl)\r\n         setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n         setShowImageUploaded(true);\r\n         \r\n        //  handleDetection()\r\n       })\r\n    })\r\n    }\r\nReact.useEffect(() => {\r\n    let data = {\r\n        url:firebaseURL\r\n    }\r\n    let config = Host()\r\n    axios(AxiosOptions(\"POST\",config['url'],data))\r\n    .then(resp => {setIdentifiedImageURL(resp.data['url'])\r\n    setLoader(false);\r\n    }\r\n    )\r\n    .catch() \r\n},[firebaseURL]); //Pass Array as second argument\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Door Knob Detector\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Image Upload */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={classes.paper}>\r\n                <form onSubmit={handleFireBaseUpload} style={{margin:40}}>\r\n                    <input \r\n                    type=\"file\"\r\n                    onChange={handleImageAsFile}\r\n                    />\r\n                    <br/>\r\n                    <Divider />\r\n                   <button style={{marginTop:20}}>Upload and Retrieve</button>\r\n                </form>\r\n                {   \r\n                    showImageUploaded\r\n                    ?\r\n                    <div>\r\n                        <img style={{margin:40}} src={imageAsUrl.imgUrl} alt=\"image tag\" />\r\n                       \r\n                    </div>\r\n                   \r\n                   :\r\n                   <p> \r\n                   </p>\r\n                }\r\n                {\r\n                    loader\r\n                    ?\r\n                    <CircularProgress style={{marginLeft:500}}disableShrink />\r\n                    :\r\n                    <p>\r\n                         <img style={{margin:40}} src={identifiedImageURL} alt=\"\" />\r\n                    </p>\r\n                }\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n               \r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React,{useState} from 'react';\nimport Dashboard from \"./components/Dashboard\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nexports.AxiosOptions = (RequestMethod, url = '', data) => {\r\n    const options = {\r\n        method: RequestMethod,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        url: url,\r\n    }\r\n    \r\n    if (data){\r\n        options['data'] = data;\r\n    }\r\n    return options;\r\n};\r\n\r\nexports.Host = () =>{\r\n    const config = {\r\n        url:\"http://4ac1b211e81f.ngrok.io/detect\"\r\n    }\r\n    return config;\r\n}"],"sourceRoot":""}